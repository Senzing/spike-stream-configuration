version: '3'
services:

  zookeeper:
    image: 'bitnami/zookeeper:latest'
    container_name: senzing-zookeeper
    environment:
#     See https://github.com/bitnami/bitnami-docker-zookeeper#configuration
      ALLOW_ANONYMOUS_LOGIN: "yes"
    networks:
      - backend
    ports:
      - '2181:2181'
    restart: always

  kafka:
    image: 'bitnami/kafka:latest'
    container_name: senzing-kafka
    depends_on:
      - zookeeper
    environment:
#     See https://github.com/bitnami/bitnami-docker-kafka#configuration
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_NUM_PARTITIONS: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    networks:
      - backend
    ports:
      - '9092:9092'
    restart: always

  mockdata:
    image: senzing/mock-data-generator
    container_name: senzing-mock-data-generator
    depends_on:
      - kafka
    environment:
#     See https://github.com/Senzing/docker-mock-data-generator#configuration
      SENZING_KAFKA_BOOTSTRAP_SERVER: senzing-kafka:9092
      SENZING_KAFKA_TOPIC: "senzing-config-kafka-topic"
      SENZING_INPUT_URL: "https://raw.githubusercontent.com/Senzing/stream-configuration/master/tests/datasource/scenario.jsonlines"
      SENZING_SUBCOMMAND: url-to-kafka
    networks:
      - backend
    restart: on-failure

  sqliteweb:
    image: coleifer/sqlite-web
    container_name: senzing-sqlite-web
    environment:
      SQLITE_DATABASE: G2C.db
    networks:
      - backend
    ports:
      - 8080:8080
    restart: always
    volumes:
      - ${SENZING_DIR:-/opt/senzing}/g2/sqldb:/data

  streamconfiguration:
    image: senzing/stream-configuration
    container_name: senzing-stream-configuration
    depends_on:
      - kafka
    environment:
#     See https://github.com/Senzing/stream-configuration#configuration
      SENZING_KAFKA_BOOTSTRAP_SERVER: senzing-kafka:9092
      SENZING_KAFKA_TOPIC: senzing-config-kafka-topic
      SENZING_SUBCOMMAND: kafka
    networks:
      - backend
    restart: on-failure
    volumes:
      - ${SENZING_DIR:-/opt/senzing}:/opt/senzing

networks:
  backend:
